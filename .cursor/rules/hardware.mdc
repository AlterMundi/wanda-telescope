# Hardware Integration Rules

## Camera Implementation Hierarchy
1. **PiCamera** (CSI interface) - Highest priority
2. **USBCamera** (OpenCV) - Fallback option  
3. **MockCamera** - Development/testing

## Camera Detection & Initialization

### Factory Pattern Usage
```python
from camera.factory import CameraFactory
camera = CameraFactory.create_camera()  # Auto-detects best available
```

### picamera2 Import Strategy
Due to virtual environment limitations, use multi-strategy import:
1. Direct import attempt
2. System path inclusion (`/usr/lib/python3/dist-packages`)
3. Subprocess fallback (rpicam commands)

## Mount Control Requirements

### GPIO Pin Configuration
- Default pins: [23, 24, 25, 8]
- 8-step sequence for smooth operation
- Sidereal tracking rate: 3.523 default

### Thread Safety
- All mount operations must be thread-safe
- Emergency stop must be immediate
- Cleanup GPIO on any error or shutdown

## Hardware Testing Matrix

| Component | Mock | Pi 4 | Pi 5 | Priority |
|-----------|------|------|------|----------|
| PiCamera  | ✓    | ✓    | ✓    | Critical |
| USB Camera| ✓    | ✓    | ✓    | Critical |
| Mount GPIO| ✓    | ✓    | ✓    | Critical |
| Session   | ✓    | ✓    | ✓    | Critical |

## Debugging Commands

### Camera Debugging
```bash
# Check detection
grep "detected" wanda.log

# Verify camera type
grep -E "Mock PiCamera|picamera2.picamera2" wanda.log

# Test directly
rpicam-still --list-cameras
vcgencmd get_camera
```

### GPIO Debugging
```bash
# Check permissions
groups | grep gpio

# Test GPIO
gpio readall

# Force mock mode
export MOCK_CAMERA=1
export MOCK_MOUNT=1
```

## Error Recovery Patterns

### Camera Failure
1. Retry with exponential backoff (3 attempts)
2. Fall back to USB camera
3. Fall back to mock camera
4. Log detailed diagnostics

### Mount Failure
1. Emergency stop immediately
2. Attempt home position return
3. Force GPIO cleanup
4. Prevent further operations

## State Management
- Save original camera state before modifications
- Restore state on cleanup
- Preserve state between captures
- Handle concurrent access safely